[{"F:\\projects\\daily-planner\\src\\index.js":"1","F:\\projects\\daily-planner\\src\\App.js":"2","F:\\projects\\daily-planner\\src\\reportWebVitals.js":"3","F:\\projects\\daily-planner\\src\\components\\scheduleTable.js":"4","F:\\projects\\daily-planner\\src\\components\\ScheduleTable.js":"5","F:\\projects\\daily-planner\\src\\components\\Signup.js":"6","F:\\projects\\daily-planner\\src\\components\\firebase\\firebase.js":"7","F:\\projects\\daily-planner\\src\\components\\Session.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3824,"mtime":1612745206982,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":425,"mtime":1611924470018,"results":"13","hashOfConfig":"10"},{"size":4338,"mtime":1612815765437,"results":"14","hashOfConfig":"10"},{"size":993,"mtime":1612390669446,"results":"15","hashOfConfig":"10"},{"size":510,"mtime":1612224395934,"results":"16","hashOfConfig":"10"},{"size":967,"mtime":1612816075300,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11daww4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\projects\\daily-planner\\src\\index.js",[],["37","38"],"F:\\projects\\daily-planner\\src\\App.js",["39","40"],"import React, { useState, useEffect, useRef } from 'react'\nimport './App.css'\nimport Signup from './components/Signup'\nimport firebase from 'firebase'\nimport Session from './components/Session'\n\nconst weekDays = ['Sun', 'Mon', 'Tues', 'Wed', 'Thu', 'Fri', 'Sat']\nconst data = require('./components/schema.json')\n\nconst App = () => {\n    const date = new Date()\n    const [user, setUser] = useState({})\n    const [allPlans, setAllPlans] = useState(data.users.daysData)\n    const [currentDate, setCurrentDate] = useState(\n        '0/12/2021'\n        // date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear()\n    )\n    const cDate = new Date(currentDate)\n    const [selectedDay, setSelectedDay] = useState(weekDays[cDate.getDay()])\n\n    const sessionRef = useRef()\n\n    useEffect(() => {\n        const createUserInDB = async () => {\n            if (user.uid) {\n                if (\n                    firebase.auth().currentUser.metadata.lastSignInTime ===\n                    firebase.auth().currentUser.metadata.creationTime\n                ) {\n                    try {\n                        await fetch('/API/users/create', {\n                            method: 'POST',\n                            body: JSON.stringify({ uid: user.uid }),\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                        })\n                    } catch (error) {\n                        console.log('User Creation Error: ', error)\n                    }\n                }\n            }\n        }\n        createUserInDB()\n    }, [user])\n\n    const handleSelectDay = (day) => {\n        setSelectedDay(day)\n    }\n    const addSession = () => {\n        const obj = {}\n        if (allPlans[currentDate]) obj[currentDate] = allPlans[currentDate]\n        else obj[currentDate] = []\n        obj[currentDate].push({\n            session_name: sessionRef.current.value,\n            skills: [],\n            tasks: []\n        })\n        sessionRef.current.value = ''\n        setAllPlans(obj)\n    }\n\n    return !user.uid ? (\n        <div className=\"App\">\n            <div className=\"glassBackground\">\n                <Signup setUser={setUser} />\n            </div>\n        </div>\n    ) : (\n        <div className=\"App\">\n            <>\n                {/* {data.users.daysData[currentDate].map()} */}\n\n                <div className=\"weekDays\">\n                    {weekDays.map((day, ind) => (\n                        <div\n                            key={ind}\n                            className={\n                                day === selectedDay ? 'headSelected' : 'head'\n                            }\n                            onClick={() => handleSelectDay(day)}\n                        >\n                            {day}\n                        </div>\n                    ))}\n                </div>\n                <div className=\"head\">{currentDate}</div>\n\n                {allPlans[currentDate] ? (\n                    allPlans[currentDate].map((sessionData, i) => (\n                        <Session key={i} data={sessionData} />\n                    ))\n                ) : (\n                    <div>No Scheduled Tasks</div>\n                )}\n                <div className=\"addSessionForm\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"New Session Name\"\n                        ref={sessionRef}\n                    />\n\n                    <button onClick={addSession}>Add Session</button>\n                </div>\n\n                <button\n                    onClick={() => firebase.auth().signOut()}\n                    className=\"signOut\"\n                >\n                    Sign Out\n                </button>\n            </>\n        </div>\n    )\n}\n\nexport default App\n","F:\\projects\\daily-planner\\src\\reportWebVitals.js",[],"F:\\projects\\daily-planner\\src\\components\\scheduleTable.js",["41","42","43"],"F:\\projects\\daily-planner\\src\\components\\ScheduleTable.js",["44"],"F:\\projects\\daily-planner\\src\\components\\Signup.js",["45"],"import React, { useState, useEffect } from \"react\";\r\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\r\nimport firebase from \"./firebase/firebase\";\r\n\r\nconst Signup = ({ setUser }) => {\r\n  var uiConfig = {\r\n    signInflow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user && isMounted) {\r\n        setUser({\r\n          uid: firebase.auth().currentUser.uid,\r\n          name: firebase.auth().currentUser.displayName,\r\n        });\r\n      } else {\r\n        setUser({});\r\n      }\r\n    });\r\n    return () => (isMounted = false);\r\n  }, [setUser]);\r\n\r\n  return (\r\n    <div>\r\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","F:\\projects\\daily-planner\\src\\components\\firebase\\firebase.js",[],"F:\\projects\\daily-planner\\src\\components\\Session.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":11,"column":11,"nodeType":"53","messageId":"54","endLine":11,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":14,"column":25,"nodeType":"53","messageId":"54","endLine":14,"endColumn":39},{"ruleId":"51","severity":1,"message":"56","line":4,"column":18,"nodeType":"53","messageId":"54","endLine":4,"endColumn":27},{"ruleId":"57","severity":2,"message":"58","line":4,"column":31,"nodeType":"53","endLine":4,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":10,"column":29,"nodeType":"61","messageId":"62","endLine":10,"endColumn":31},{"ruleId":"51","severity":1,"message":"63","line":27,"column":19,"nodeType":"53","messageId":"54","endLine":27,"endColumn":24},{"ruleId":"51","severity":1,"message":"64","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"65","line":3,"column":21,"nodeType":"53","messageId":"54","endLine":3,"endColumn":29},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'date' is assigned a value but never used.","Identifier","unusedVar","'setCurrentDate' is assigned a value but never used.","'setSkills' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"scheduleTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'temp2' is assigned a value but never used.","'useState' is defined but never used.","'EditIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]